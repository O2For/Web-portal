{
  "uid" : "b0ca145e108618f2",
  "name" : "test_St110[99h@snapmail.cc-99h-99hrep1@snapmail.cc-99hrep1-99hrep2@snapmail.cc-99hrep2-National ID Card-Passport-99hrep3@snapmail.cc-99hrep3-Passport-Ht@12345-ChloeCompany-Link_NewCorp_WithRep_2-chloe@snapmail.cc-Ht@12345]",
  "fullName" : "SmokeTesting_test.TestCaes#test_St110",
  "historyId" : "f3f6a6beb2089518cf83a98a1667bf80",
  "time" : {
    "start" : 1683282720066,
    "stop" : 1683282756679,
    "duration" : 36613
  },
  "status" : "broken",
  "statusMessage" : "TypeError: close() takes 1 positional argument but 2 were given",
  "statusTrace" : "self = <venv.test_demo.SmokeTesting_test.TestCaes object at 0x0000024FC9A81508>\ndrivers = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"d78344dd346c5bd88bd5eed7b59ce5e4\")>\nCorpEmail = '99h@snapmail.cc', CorpName = '99h'\nRep1Email = '99hrep1@snapmail.cc', Rep1Name = '99hrep1'\nRep2Email = '99hrep2@snapmail.cc', Rep2Name = '99hrep2'\nDocumentType1 = 'National ID Card', Rep2Doc2 = 'Passport'\nRep3Email = '99hrep3@snapmail.cc', Rep3Name = '99hrep3'\nDocumentType2 = 'Passport', Password = 'Ht@12345'\nbusiness_name = 'ChloeCompany', NewProductName = 'Link_NewCorp_WithRep_2'\nbusiness_email = 'chloe@snapmail.cc', business_password = 'Ht@12345'\n\n    @allure.story('Verify that the corporate user should be able to upload a document..')\n    #@pytest.mark.skip('skop')\n    @pytest.mark.parametrize(\n        \"CorpEmail,CorpName,\"\n        \"Rep1Email,Rep1Name,\"\n        \"Rep2Email,Rep2Name,DocumentType1,Rep2Doc2,\"\n        \"Rep3Email,Rep3Name,DocumentType2,Password,\"\n        \"business_name,NewProductName,business_email,business_password\",\n        [(Test_data['T110_CorpEmail'],Test_data['T110_CorpName'],\n    \n          Test_data['T110_Rep1Email'],Test_data['T110_Rep1Name'],\n    \n          Test_data['T110_Rep2Email'], Test_data['T110_Rep2Name'], Test_data['T110_DocumentType1'], Test_data['T110_Rep2Doc2'],\n    \n          Test_data['T110_Rep3Email'], Test_data['T110_Rep3Name'], Test_data['T110_DocumentType2'],\n    \n          Test_data['T110_Password'],\n    \n          Test_data['business_name'], Test_data['T110_NewProductName'], Test_data['business_email'], Test_data['business_password'],\n          )])\n    def test_St110(self, drivers, CorpEmail, CorpName,\n                   Rep1Email, Rep1Name,\n                   Rep2Email, Rep2Name,DocumentType1, Rep2Doc2,\n                   Rep3Email, Rep3Name, DocumentType2,\n                   Password,\n                   business_name, NewProductName,business_email, business_password):\n        RootPath = PathOperation()\n        with allure.step('Precondition 0: Doc Type Path Ready....'):\n            DocPath = RootPath.getOtherPath('\\Data')\n            dataTest = dict(data.Photo_C)  # 加载 文档内容\n    \n        CusHomePage=CustomerHomePage(drivers)\n        cus = customer_login_page(drivers)\n        cus.open(Test_data['customer_url']);\n        # with allure.step('Precondition 1: Sign up a individual user:{}'.format(Rep1Email)):\n        #     cus.sign_up.click()\n        #     cus.register_email_field.send_keys(Rep1Email)\n        #     cus.register_password_field.send_keys(Password)\n        #     cus.register_passwordRepeat_field.send_keys(Password)\n        #     cus.accept_read.click()\n        #     cus.SignUpInd(Rep1Name)\n        #     sleep(3)\n        #     CusHomePage.closeProfile_SetUp()\n        #     # cus.Login_step(InviteEmail,Password)  #Test\n        #     cus.wait_page_load_timeout(10)\n        #     CusHomePage.Logout()\n        #with allure.step('Precondition 2: Sign up a Corporate user:{}'.format(CorpEmail)):\n            # cus.sign_up.click()\n            # cus.register_email_field.send_keys(CorpEmail)\n            # cus.register_password_field.send_keys(Password)\n            # cus.register_passwordRepeat_field.send_keys(Password)\n            # cus.accept_read.click()\n            # cus.SignUpCorp(CorpName)\n            # CusHomePage.closeProfile_SetUp()\n            #cus.Login_step(CorpEmail,Password)  # Test\n    \n        ActionOP = ActionPage(drivers)\n        corpRep = CorpRep(drivers)\n        AuthPage = AuthRep(drivers)\n        # with allure.step('A. Verify the workflow of corporate send invite 1 existing user:{}and 2 new users:{},{} as the auth reps at the time.'.format(Rep1Email,Rep2Email,Rep3Email)):\n        #     with allure.step('1. Click Add Authorised Representatives to add online 3 reps'):\n        #         ActionOP.AddOnlineRep(Rep1Email,Rep2Email,Rep3Email)\n        #         CusHomePage.Logout()\n        # with allure.step('B. Verify the workflow of individual user become an anthorized representative.'):\n        #     with allure.step('Scenario 1: The individual user {} has not uploaded any documents.'.format(Rep1Email)):\n        #         cus.Login_step(Rep1Email,Password)\n        #\n        #         with allure.step('Confirm anthorized representative action'):\n        #             ActionOP.ConfirmAuteRep_With_No_Doc()\n        #\n        #         with allure.step('Corporates I represent has this corporate name:{}'.format(CorpName)):\n        #             obtained_Information=corpRep.CheckCorpInformation()\n        #             assert obtained_Information['getcorpName']==CorpName\n        #             assert len(obtained_Information['getDocWithAccess'])==0 #判断是否为空字符串\n        #         with allure.step('Logout this user'):\n        #             CusHomePage.Logout()\n        #\n        #     with allure.step('Scenario 2: The individual user {} has uploaded some documents that with only one version.'.format(Rep2Email)):\n        #         with allure.step('The individual user sign up successfuly'):\n        #             cus.FirstSignInd(Rep2Email,Password,Rep2Name)\n        #             CusHomePage.closeProfile_SetUp()\n        #             #cus.Login_step(Rep2Email,Password) #  test\n        #\n        #         with allure.step('Upload one document'):\n        #             CusHomePage.UploadDocHome_Ind(DocPath, dataTest, DocumentType1,Rep2Name)\n        #\n        #         with allure.step('Confirm anthorized representative action, and shared doc {} to corporate'.format(DocumentType1)):\n        #             ActionOP.ConfirmAuteRep_WithDocs(DocumentType1)\n        #\n        #         with allure.step('Corporates I represent has this corporate name:{} with shared doc {}'.format(CorpName,DocumentType1)):\n        #             obtained_Information=corpRep.CheckCorpInformation()\n        #             assert obtained_Information['getcorpName']==CorpName\n        #             assert DocumentType1 in obtained_Information['getDocWithAccess']\n        #\n        #         with allure.step('Logout this user'):\n        #             CusHomePage.Logout()\n        #\n        #     with allure.step('Scenario 3 :The user {} has uploaded some documents that with multiple versions.'.format(Rep3Email)):\n        #         with allure.step('The individual user sign up successfuly'):\n        #             cus.FirstSignInd(Rep3Email, Password, Rep3Name)\n        #             CusHomePage.closeProfile_SetUp()\n        #             #cus.Login_step(Rep3Email,Password) #Test\n        #\n        #         with allure.step('Upload multiple docs versions. Version ==2'):\n        #             CusHomePage.UploadDocHome_Ind(DocPath, dataTest, DocumentType2,Rep3Name)\n        #             CusHomePage.UploadDocHome_Ind(DocPath, dataTest, DocumentType2,Rep3Name)\n        #             assert CusHomePage.GetDoclatestVersion(DocumentType2)=='Version 2'\n        #\n        #         with allure.step('Confirm anthorized representative action, and shared doc {} to corporate'.format(DocumentType2)):\n        #             ActionOP.ConfirmAuteRep_WithDocs(DocumentType2)\n        #\n        #         with allure.step('Corporates I represent has this corporate name:{} with shared doc {}'.format(CorpName,DocumentType2)):\n        #             obtained_Information=corpRep.CheckCorpInformation()\n        #             assert obtained_Information['getcorpName']==CorpName\n        #             assert DocumentType2 in obtained_Information['getDocWithAccess']\n        #\n        #         with allure.step('Logout this user'):\n        #             CusHomePage.Logout()\n        # #\n        # #\n        #\n        #     document = Documents_Corp(drivers)\n        #     with allure.step('Assert The rep display results'):\n        #         with allure.step('Login corporate'):\n        #             cus.Login_step(CorpEmail,Password)\n        #\n        #         with allure.step('Check Connections/Authorised Representatives page'):\n        #             with allure.step('CHeck rep name and shared doc Coincident'):\n        #                 getAuthInfor = AuthPage.CheckAuthInformation()\n        #                 assert len(getAuthInfor[Rep1Email])==0\n        #                 assert DocumentType1 in getAuthInfor[Rep2Email]\n        #                 assert DocumentType2 in getAuthInfor[Rep3Email]\n        #\n        #             document.open_Documents()\n        #             document.open_Representatives()\n        #             with allure.step('{} has no doc '.format(Rep1Name)):\n        #                 document.open_OnlineRepPage(Rep1Name)\n        #                 assert document.NOdoc_isExist()==True\n        #             with allure.step('{} has one doc {} latest doc is 1'.format(Rep2Name,DocumentType1)):\n        #\n        #                 document.open_OnlineRepPage(Rep2Name)\n        #                 assert document.check_repDocDetails(DocumentType1)=='Version 1'\n        #                 document.close_doc_window()\n        #\n        #             with allure.step('{} has one doc {} latest doc version is 2'.format(Rep3Name,DocumentType2)):\n        #\n        #                 document.open_OnlineRepPage(Rep3Name)\n        #                 assert document.check_repDocDetails(DocumentType2) == 'Version 2';\n        #                 #document.close_doc_window()\n        #             with allure.step('For {} Previous versions of this document will show NO ACCESS in details and cannot request to view'.format(Rep3Name)):\n        #\n        #                 document.latestV.click()\n        #                 document.PreviousV.click();sleep(3)\n        #                 assert document.docIs_NoAccess()==True\n        #                 document.close_doc_window()\n        #                 CusHomePage.Logout()\n        # with allure.step('C: Verify the workflow of the existing rep {} upload new version of the document that has granted access for the corporate company.'.format(Rep2Email)):\n            # with allure.step('Login rep account and Upload new version of document{}'.format(DocumentType1)):\n            #     cus.Login_step(Rep2Email,Password)\n            #     CusHomePage.UploadDocHome_Ind(DocPath,dataTest,DocumentType1)\n            #     with allure.step('Rep Logout'):\n            #         CusHomePage.Logout()\n    \n            # document = Documents_Corp(drivers)\n            # with allure.step('Login the corporate account.'):\n            #\n            #     cus.Login_step(CorpEmail, Password)\n            # with allure.step('Switch to This rep Documents tab page.'):\n            #\n            #     document.open_Documents()\n            #     document.open_Representatives()\n            #     document.open_OnlineRepPage(Rep2Name)\n            # with allure.step(' There is \"NEW\" at the top-left corner of the document {} '.format(DocumentType1)):\n            #     assert document.check_NewLabel(DocumentType1)\n            #with allure.step('Check Document and has a \"Request Access\" button at the document.'):\n                #latestVersion = document.check_repDocDetails(DocumentType1)\n                #document.requestAccessButton.click()\n            # with allure.step('Input Note and confirm'):\n            #     document.note.send_keys('The {} Access Request'.format(latestVersion))\n            #     document.confirmNote.click();time.sleep(3)\n            # with allure.step('The new version will be displayed.'):\n            #     assert document.docIs_NoAccess()==False\n            #     document.close_doc_window()\n            #     CusHomePage.Logout()\n            # massageP=MessagesPage(drivers)\n            # with allure.step('Login rep account ,in notification named \"Important Info\" will be displayed.'):\n            #     cus.Login_step(Rep2Email,Password)\n            #     massageP.JumpSytemMessage()\n            #     assert 'The {} Access Request'.format(latestVersion) in massageP.GetLatestMassage()\n            #     CusHomePage.Logout()\n        document = Documents_Corp(drivers)\n    \n        # with allure.step('D: Verify the workflow of the corporate request access to rep {} one document that he without the access before'.format(Rep2Email)):\n            # with allure.step('Rep upload a new type doc name {}'.format(Rep2Doc2)):\n            #     cus.Login_step(Rep2Email,Password)\n            #     CusHomePage.UploadDocHome_Ind(DocPath,dataTest,Rep2Doc2,Rep2Name)\n            #     CusHomePage.Logout()\n    \n    \n            # with allure.step('Switch to This rep Documents tab page.'):\n            #\n            #     cus.Login_step(CorpEmail,Password)\n            #     document.open_Documents()\n            #     document.open_Representatives()\n            #     document.open_OnlineRepPage(Rep2Name)\n            # with allure.step('There is \"No Access\" at the top-left corner of the document {} '.format(Rep2Doc2)):\n            #\n            #     assert document.check_NoAccess_Label(Rep2Doc2)\n            # with allure.step('Send Document Permission Request '):\n            #\n            #     document.note.send_keys('The {} Access Request'.format(Rep2Doc2))\n            #     document.confirmNote.click();time.sleep(3)\n            #     CusHomePage.Logout()\n    \n            # with allure.step('Rep login and Document Permission Request display in the action list'):\n                # cus.Login_step(Rep2Email,Password)\n                #后面会修复 为\n                # ActionOP.open_Purpose('requested access to the below document(s)')\n                # ActionOP.Confirm_DocPermission(Rep2Doc2,'The {} Access Request'.format(Rep2Doc2))\n                # with allure.step('Check Corporates I represent displays doc {}'.format(Rep2Doc2)):\n                #\n                #     AccessDoc = corpRep.CheckCorpInformation()\n                #     assert Rep2Doc2 in AccessDoc['getDocWithAccess']\n                #     CusHomePage.Logout()\n            # with allure.step('Coporate login can see the details of the doc {}'.format(Rep2Doc2)):\n                # cus.Login_step(CorpEmail,Password)\n            #     document.open_Documents()\n            #     document.open_Representatives()\n            #     document.open_OnlineRepPage(Rep2Name)\n            #     assert document.check_repDocDetails(Rep2Doc2)\n            #     document.close_doc_window()\n            #     CusHomePage.Logout()\n    \n        product_op = Product(drivers)\n        bus = LoginPage(drivers)\n        nav = NavigationBar(drivers)\n    \n    \n        # with allure.step('Precondition 1: {} create a new product name {}...'.format(business_name, NewProductName)):\n            # with allure.step('Login business portal...'):\n            #     OpenNew_window = 'window.open(\"{}\")'.format(Test_data['business_url'])\n            #     bus.execute_script(OpenNew_window);\n            #     bus.switch_to_window(1)\n            #     bus.wait(10);\n            #     sleep(7)\n            # #\n            # #\n            #     bus.BusLogin(business_email, business_password)\n            # with allure.step('Create a new Product/Services named {}'.format(NewProductName)):\n            #     product_op.OpenProuductPage()\n            #     product_op.Create_Basic_Inforamtion(NewProductName, 'Corporate',\n            #                                         Note='Scenario 1: The corporate company has shared the document to OBC')\n            #     product_op.Create_Standard_Due_Diligence_Documents()\n            #     product_op.Create_Authorised_Representatives(1, DocumentType1)\n            # with allure.step('Send to {} Source documents'.format(CorpEmail)):\n            #     nav.SourceDocuments(CorpEmail, NewProductName,\n            #                         Note='Scenario 1: The corporate company has shared the document to OBC')\n            #     nav.switch_to_window(0)\n            # with allure.step('Corp completed this new product'):\n            #     cus.Login_step(CorpEmail,Password)\n            #     ActionOP.open_Purpose(NewProductName)\n            #\n            #     ActionOP.Next.click();\n            #     ActionOP.Select_rep(Rep2Name,)\n            #     ActionOP.consent_action()\n            #     CusHomePage.Logout()\n    \n        # with allure.step('E: Verify the workflow of the existing rep revoke the document that has granted access for the corporate company.'):\n            # with allure.step('Scenario 1: The corporate company has shared the document to OBC: {}'.format(business_name)):\n            #\n                # with allure.step('Rep login and revoke this doc {}'.format(DocumentType1)):\n                #     cus.Login_step(Rep2Email, Password)\n                    # corpRep.open_CorporatesRepresent()\n                    # with allure.step('The document has been shared with onboarding company, please revoke access first.'):\n                    #\n                    #     assert corpRep.PermissReovkeDoc(CorpName,DocumentType1) ==False\n    \n            # with allure.step('Scenario 2: The corporate company has not shared the document to any OBC: {}'.format(business_name)):\n    \n                # with allure.step('Rep login and revoke this doc {}'.format(Rep2Doc2)):\n    \n                    # with allure.step( 'Revoke button will be disappeared next the document.'):\n                    #     assert corpRep.PermissReovkeDoc(CorpName,Rep2Doc2) == True\n                    #     CusHomePage.Logout()\n                    # with allure.step(' Login the corporate account ->Switch to Documents tab page.'):\n                    #     cus.Login_step(CorpEmail, Password)\n                    # with allure.step('There is \"No Access\" at the document {} '.format(Rep2Doc2)):\n                    #\n                    #     document.open_Documents()\n                    #     document.open_Representatives()\n                    #     with allure.step('{} has no doc '.format(Rep2Doc2)):\n                    #         document.open_OnlineRepPage(Rep2Name)\n                    #         assert document.check_NoAccess_Label(Rep2Doc2,click=False)==True\n                    #         CusHomePage.Logout()\n    \n        # with allure.step('F: Verify the workflow of the existing rep delete the document that has granted access for the corporate company'):\n            # with allure.step('Scenario 1: The corporate company has shared the document{} to OBC.'.format(DocumentType1)):\n            #     with allure.step('1. Login the rep account'):\n            #         cus.Login_step(Rep2Email,Password)\n            #     with allure.step('2. Switch to Documents tab page.'):\n            #         document.open_Documents()\n            #     with allure.step('3. Delete the document that has been shared to OBC.'):\n            #         daleteResult = document.Delete_Doc(DocumentType1)\n            #     with allure.step('One info pop up will be displayed: The document has been shared with onboarding company, please revoke access first.'):\n            #         assert daleteResult[0]==False\n            #         assert 'The document has been shared' in daleteResult[1]\n    \n            # with allure.step('Scenario 2: The corporate company has no shared the document{} to OBC.'.format(Rep2Doc2)):\n            #\n            #     with allure.step('1 Delete the document {} that not shared to OBC.'.format(Rep2Doc2)):\n            #\n            #         daleteResult = document.Delete_Doc(Rep2Doc2)\n            #     with allure.step(' The document will be disappeared in My Document page.'):\n            #         assert daleteResult==True\n                     #CusHomePage.Logout()\n    \n        # with allure.step('G:  Verify the workflow of the corporate company remove the existing rep and invite he as the rep again.'):\n            # with allure.step('Scenario 1: The corporate company has shared the rep document to OBC.'):\n                # with allure.step('1. Login the corp account'):\n                    # cus.Login_step(CorpEmail, Password)\n                # with allure.step('2. Navigate to connections/Authorised Representative'):\n                #     AuthPage.open_AuthorisedRepresent()\n                # with allure.step('3. Choose a Rep and click the delete button Click the CONFIRM button  Refresh the list'):\n                #     assert AuthPage.Remove_onlineRep(Rep2Email)==True\n                # with allure.step('4. Check the in Document-Inactive'):\n                #\n                #     document.open_Documents()\n                #     document.open_Representatives()\n                #     document.open_InactiveRepPage(Rep2Name)\n                #     CusHomePage.Logout()\n                # with allure.step('5.Rep login and Switch to connections-Corporates Represent'):\n                #\n                #     cus.Login_step(Rep2Email,Password)\n                #     corpRep.open_CorporatesRepresent()\n                # with allure.step('6 The documents which has be shared to OBC are displayed in the documents permission page.'):\n                #\n                #     corpRep.PermissionSetting.click()\n                # with allure.step('7 Pop up warning:You are no longger the representative of the Corporates I represent and cannot modify the document permission'):\n                #\n                #     assert 'You are no longger the representative of' in corpRep.warning.text\n                #     corpRep.okay.click()\n                #\n                # with allure.step('8.Login the corp account and Invite the individual as the rep again.'):\n                #\n                #     AuthPage.open_AuthorisedRepresent()\n                #     AuthPage.InviteRep(Rep2Email)\n                #     CusHomePage.Logout()\n                # with allure.step('9.Rep Login and accept this invite'):\n                #\n                #     cus.Login_step(Rep2Email, Password)\n                #     ActionOP.open_Purpose('Confirmation needed as an Authorised representative')\n                #     ActionOP.confirmBeRepFirstConsent.click()\n                # with allure.step('10.Check if there is version information for previously shared files:This version of document {} has already been shared with this company'.format(Rep2Doc2)):\n                #\n                #     result = ActionOP.assertDocHasBeenShared(DocumentType1)\n                #     assert 'This version of document {} has already been shared with this company'.format(DocumentType1) in result[1]\n                #     ActionOP.docPermissionConfirm.click() ;ActionOP.sleep(3)\n                #     CusHomePage.Logout()\n                # with allure.step('11.Login corp ,Switch to the Document page.Expand the corresponding rep to check the documents.'):\n                #     cus.Login_step(CorpEmail,Password)\n                #     document.open_Documents()\n                #     document.open_Representatives()\n                #     document.open_OnlineRepPage(Rep2Name)\n                # with allure.step('12. The documents which selected and the documents that has shared with OBC are all with the access.'):\n                #     document.check_repDocDetails(DocumentType1)\n                #     document.close_doc_window()\n                #     CusHomePage.Logout()\n    \n            # with allure.step('Scenario 2: The corporate company has not shared the document to any OBC.'):\n                # cus.Login_step(CorpEmail, Password)\n                # with allure.step('2. Navigate to connections/Authorised Representative'):\n                #     AuthPage.open_AuthorisedRepresent()\n                # with allure.step('3. Choose a Rep and click the delete button Click the CONFIRM button  Refresh the list'):\n                #\n                #     assert AuthPage.Remove_onlineRep(Rep1Email) == True\n                #     CusHomePage.Logout()\n                # with allure.step('4 Login the rep account,Switch to connections-Corporates Represent,Find the corp you just matched'):\n                #\n                #     cus.Login_step(Rep1Email, Password)\n                #     result_ = corpRep.CheckCorpInformation()\n                #     assert result_== ''\n                #     CusHomePage.Logout()\n                # with allure.step('5.Login the corp account and Invite the individual as the rep again.'):\n                #\n                #     cus.Login_step(CorpEmail, Password)\n                #     AuthPage.open_AuthorisedRepresent()\n                #     AuthPage.InviteRep(Rep1Email)\n                #     CusHomePage.Logout()\n                # with allure.step('6.Rep Login and accept this invite'):\n                #\n                #     cus.Login_step(Rep1Email, Password)\n                #     ActionOP.ConfirmAuteRep_With_No_Doc()\n                #     CusHomePage.Logout()\n                # with allure.step('7.Login corp ,Switch to the Document page.Expand the corresponding rep to check the documents.'):\n                #\n                #     cus.Login_step(CorpEmail, Password)\n                #     document.open_Documents()\n                #     document.open_Representatives()\n                #     assert document.open_OnlineRepPage(Rep1Name)==True\n                #     CusHomePage.Logout()\n        companyshare = Companies(drivers)\n    \n        with allure.step('H. Verify the workflow of the corporate company share documents for one OBC via one existing Product/Service that need some rep documents.'):\n    \n            # with allure.step('Scenario 1: The selected rep has not granted the document access for the corporate.'):\n            #     with allure.step('1.Corp click the share buttonEnter the OBC company name to search,Select the product that requires REP documentation'):\n            #         cus.Login_step(CorpEmail,Password)\n            #         companyshare.JumpCompanies()\n            #         needrepnum = companyshare.SearchConnect(business_name,NewProductName)\n            #         assert needrepnum>0\n            #         RepPendingDoc = companyshare.ProductSelectRep(Rep1Name)\n            #         companyshare.XButton.click()\n            #         CusHomePage.Logout()\n            #     with allure.step('Rep Upload the doc required for the product'):\n            #         cus.Login_step(Rep1Email,Password)\n            #         for doc in RepPendingDoc:\n            #             CusHomePage.UploadDocHome_Ind(DocPath,dataTest,doc)\n            #         CusHomePage.Logout()\n            #     with allure.step('3..Corp share this OBC company again'):\n            #         cus.Login_step(CorpEmail, Password)\n            #         companyshare.JumpCompanies()\n            #         needrepnum = companyshare.SearchConnect(business_name, NewProductName)\n            #         assert needrepnum > 0\n            #         RepNoaccessDoc = companyshare.ProductSelectRep(Rep1Name)\n            #     with allure.step('4. Corp select the rep and NoAccess documents,The status of the document is NoAccess'):\n            #         assert DocumentType1 in RepNoaccessDoc\n            #     with allure.step('5.Click confirm button ,pop up You dont have permission for this document, please request permission first.'):\n            #         Message = companyshare.confirmShare()\n            #         assert  'please request permission first'in Message\n            #         companyshare.XButton.click()\n            #         CusHomePage.Logout()\n    \n            vaulhub = VaultHub(drivers)\n            drawer = Drawer(drivers)\n            with allure.step('Scenario 2: The selected rep has granted the document access for the corporate;'):\n                # with allure.step( '1.Corp click the share buttonEnter the OBC company name to search,Select the product that requires REP documentation'):\n                #     cus.Login_step(CorpEmail, Password)\n                #     companyshare.JumpCompanies()\n                #     needrepnum = companyshare.SearchConnect(business_name, NewProductName)\n                #     assert needrepnum > 0\n                #     DocNOcompleteStatue = companyshare.ProductSelectRep(Rep2Name)\n                # with allure.step('2.Corp select the rep and documents with permissions'):\n                #     assert DocNOcompleteStatue==0\n                # with allure.step('3. Click the CONFIRM button,and Reminder: Success'):\n                #     Message = companyshare.confirmShare()\n                #     assert 'Share Success!' in Message\n                #     CusHomePage.Logout()\n                with allure.step('The obc user can see the reps document'):\n                    with allure.step('Login business portal...'):\n                        OpenNew_window = 'window.open(\"{}\")'.format(Test_data['business_url'])\n                        bus.execute_script(OpenNew_window);\n                        bus.switch_to_window(1)\n    \n                        bus.wait(10);\n                        sleep(7)\n                        bus.BusLogin(business_email, business_password)\n>                       bus.close(Test_data['business_url'])\nE                       TypeError: close() takes 1 positional argument but 2 were given\n\nSmokeTesting_test.py:1225: TypeError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "drivers",
    "time" : {
      "start" : 1683282705590,
      "stop" : 1683282720062,
      "duration" : 14472
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "TypeError: close() takes 1 positional argument but 2 were given",
    "statusTrace" : "self = <venv.test_demo.SmokeTesting_test.TestCaes object at 0x0000024FC9A81508>\ndrivers = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"d78344dd346c5bd88bd5eed7b59ce5e4\")>\nCorpEmail = '99h@snapmail.cc', CorpName = '99h'\nRep1Email = '99hrep1@snapmail.cc', Rep1Name = '99hrep1'\nRep2Email = '99hrep2@snapmail.cc', Rep2Name = '99hrep2'\nDocumentType1 = 'National ID Card', Rep2Doc2 = 'Passport'\nRep3Email = '99hrep3@snapmail.cc', Rep3Name = '99hrep3'\nDocumentType2 = 'Passport', Password = 'Ht@12345'\nbusiness_name = 'ChloeCompany', NewProductName = 'Link_NewCorp_WithRep_2'\nbusiness_email = 'chloe@snapmail.cc', business_password = 'Ht@12345'\n\n    @allure.story('Verify that the corporate user should be able to upload a document..')\n    #@pytest.mark.skip('skop')\n    @pytest.mark.parametrize(\n        \"CorpEmail,CorpName,\"\n        \"Rep1Email,Rep1Name,\"\n        \"Rep2Email,Rep2Name,DocumentType1,Rep2Doc2,\"\n        \"Rep3Email,Rep3Name,DocumentType2,Password,\"\n        \"business_name,NewProductName,business_email,business_password\",\n        [(Test_data['T110_CorpEmail'],Test_data['T110_CorpName'],\n    \n          Test_data['T110_Rep1Email'],Test_data['T110_Rep1Name'],\n    \n          Test_data['T110_Rep2Email'], Test_data['T110_Rep2Name'], Test_data['T110_DocumentType1'], Test_data['T110_Rep2Doc2'],\n    \n          Test_data['T110_Rep3Email'], Test_data['T110_Rep3Name'], Test_data['T110_DocumentType2'],\n    \n          Test_data['T110_Password'],\n    \n          Test_data['business_name'], Test_data['T110_NewProductName'], Test_data['business_email'], Test_data['business_password'],\n          )])\n    def test_St110(self, drivers, CorpEmail, CorpName,\n                   Rep1Email, Rep1Name,\n                   Rep2Email, Rep2Name,DocumentType1, Rep2Doc2,\n                   Rep3Email, Rep3Name, DocumentType2,\n                   Password,\n                   business_name, NewProductName,business_email, business_password):\n        RootPath = PathOperation()\n        with allure.step('Precondition 0: Doc Type Path Ready....'):\n            DocPath = RootPath.getOtherPath('\\Data')\n            dataTest = dict(data.Photo_C)  # 加载 文档内容\n    \n        CusHomePage=CustomerHomePage(drivers)\n        cus = customer_login_page(drivers)\n        cus.open(Test_data['customer_url']);\n        # with allure.step('Precondition 1: Sign up a individual user:{}'.format(Rep1Email)):\n        #     cus.sign_up.click()\n        #     cus.register_email_field.send_keys(Rep1Email)\n        #     cus.register_password_field.send_keys(Password)\n        #     cus.register_passwordRepeat_field.send_keys(Password)\n        #     cus.accept_read.click()\n        #     cus.SignUpInd(Rep1Name)\n        #     sleep(3)\n        #     CusHomePage.closeProfile_SetUp()\n        #     # cus.Login_step(InviteEmail,Password)  #Test\n        #     cus.wait_page_load_timeout(10)\n        #     CusHomePage.Logout()\n        #with allure.step('Precondition 2: Sign up a Corporate user:{}'.format(CorpEmail)):\n            # cus.sign_up.click()\n            # cus.register_email_field.send_keys(CorpEmail)\n            # cus.register_password_field.send_keys(Password)\n            # cus.register_passwordRepeat_field.send_keys(Password)\n            # cus.accept_read.click()\n            # cus.SignUpCorp(CorpName)\n            # CusHomePage.closeProfile_SetUp()\n            #cus.Login_step(CorpEmail,Password)  # Test\n    \n        ActionOP = ActionPage(drivers)\n        corpRep = CorpRep(drivers)\n        AuthPage = AuthRep(drivers)\n        # with allure.step('A. Verify the workflow of corporate send invite 1 existing user:{}and 2 new users:{},{} as the auth reps at the time.'.format(Rep1Email,Rep2Email,Rep3Email)):\n        #     with allure.step('1. Click Add Authorised Representatives to add online 3 reps'):\n        #         ActionOP.AddOnlineRep(Rep1Email,Rep2Email,Rep3Email)\n        #         CusHomePage.Logout()\n        # with allure.step('B. Verify the workflow of individual user become an anthorized representative.'):\n        #     with allure.step('Scenario 1: The individual user {} has not uploaded any documents.'.format(Rep1Email)):\n        #         cus.Login_step(Rep1Email,Password)\n        #\n        #         with allure.step('Confirm anthorized representative action'):\n        #             ActionOP.ConfirmAuteRep_With_No_Doc()\n        #\n        #         with allure.step('Corporates I represent has this corporate name:{}'.format(CorpName)):\n        #             obtained_Information=corpRep.CheckCorpInformation()\n        #             assert obtained_Information['getcorpName']==CorpName\n        #             assert len(obtained_Information['getDocWithAccess'])==0 #判断是否为空字符串\n        #         with allure.step('Logout this user'):\n        #             CusHomePage.Logout()\n        #\n        #     with allure.step('Scenario 2: The individual user {} has uploaded some documents that with only one version.'.format(Rep2Email)):\n        #         with allure.step('The individual user sign up successfuly'):\n        #             cus.FirstSignInd(Rep2Email,Password,Rep2Name)\n        #             CusHomePage.closeProfile_SetUp()\n        #             #cus.Login_step(Rep2Email,Password) #  test\n        #\n        #         with allure.step('Upload one document'):\n        #             CusHomePage.UploadDocHome_Ind(DocPath, dataTest, DocumentType1,Rep2Name)\n        #\n        #         with allure.step('Confirm anthorized representative action, and shared doc {} to corporate'.format(DocumentType1)):\n        #             ActionOP.ConfirmAuteRep_WithDocs(DocumentType1)\n        #\n        #         with allure.step('Corporates I represent has this corporate name:{} with shared doc {}'.format(CorpName,DocumentType1)):\n        #             obtained_Information=corpRep.CheckCorpInformation()\n        #             assert obtained_Information['getcorpName']==CorpName\n        #             assert DocumentType1 in obtained_Information['getDocWithAccess']\n        #\n        #         with allure.step('Logout this user'):\n        #             CusHomePage.Logout()\n        #\n        #     with allure.step('Scenario 3 :The user {} has uploaded some documents that with multiple versions.'.format(Rep3Email)):\n        #         with allure.step('The individual user sign up successfuly'):\n        #             cus.FirstSignInd(Rep3Email, Password, Rep3Name)\n        #             CusHomePage.closeProfile_SetUp()\n        #             #cus.Login_step(Rep3Email,Password) #Test\n        #\n        #         with allure.step('Upload multiple docs versions. Version ==2'):\n        #             CusHomePage.UploadDocHome_Ind(DocPath, dataTest, DocumentType2,Rep3Name)\n        #             CusHomePage.UploadDocHome_Ind(DocPath, dataTest, DocumentType2,Rep3Name)\n        #             assert CusHomePage.GetDoclatestVersion(DocumentType2)=='Version 2'\n        #\n        #         with allure.step('Confirm anthorized representative action, and shared doc {} to corporate'.format(DocumentType2)):\n        #             ActionOP.ConfirmAuteRep_WithDocs(DocumentType2)\n        #\n        #         with allure.step('Corporates I represent has this corporate name:{} with shared doc {}'.format(CorpName,DocumentType2)):\n        #             obtained_Information=corpRep.CheckCorpInformation()\n        #             assert obtained_Information['getcorpName']==CorpName\n        #             assert DocumentType2 in obtained_Information['getDocWithAccess']\n        #\n        #         with allure.step('Logout this user'):\n        #             CusHomePage.Logout()\n        # #\n        # #\n        #\n        #     document = Documents_Corp(drivers)\n        #     with allure.step('Assert The rep display results'):\n        #         with allure.step('Login corporate'):\n        #             cus.Login_step(CorpEmail,Password)\n        #\n        #         with allure.step('Check Connections/Authorised Representatives page'):\n        #             with allure.step('CHeck rep name and shared doc Coincident'):\n        #                 getAuthInfor = AuthPage.CheckAuthInformation()\n        #                 assert len(getAuthInfor[Rep1Email])==0\n        #                 assert DocumentType1 in getAuthInfor[Rep2Email]\n        #                 assert DocumentType2 in getAuthInfor[Rep3Email]\n        #\n        #             document.open_Documents()\n        #             document.open_Representatives()\n        #             with allure.step('{} has no doc '.format(Rep1Name)):\n        #                 document.open_OnlineRepPage(Rep1Name)\n        #                 assert document.NOdoc_isExist()==True\n        #             with allure.step('{} has one doc {} latest doc is 1'.format(Rep2Name,DocumentType1)):\n        #\n        #                 document.open_OnlineRepPage(Rep2Name)\n        #                 assert document.check_repDocDetails(DocumentType1)=='Version 1'\n        #                 document.close_doc_window()\n        #\n        #             with allure.step('{} has one doc {} latest doc version is 2'.format(Rep3Name,DocumentType2)):\n        #\n        #                 document.open_OnlineRepPage(Rep3Name)\n        #                 assert document.check_repDocDetails(DocumentType2) == 'Version 2';\n        #                 #document.close_doc_window()\n        #             with allure.step('For {} Previous versions of this document will show NO ACCESS in details and cannot request to view'.format(Rep3Name)):\n        #\n        #                 document.latestV.click()\n        #                 document.PreviousV.click();sleep(3)\n        #                 assert document.docIs_NoAccess()==True\n        #                 document.close_doc_window()\n        #                 CusHomePage.Logout()\n        # with allure.step('C: Verify the workflow of the existing rep {} upload new version of the document that has granted access for the corporate company.'.format(Rep2Email)):\n            # with allure.step('Login rep account and Upload new version of document{}'.format(DocumentType1)):\n            #     cus.Login_step(Rep2Email,Password)\n            #     CusHomePage.UploadDocHome_Ind(DocPath,dataTest,DocumentType1)\n            #     with allure.step('Rep Logout'):\n            #         CusHomePage.Logout()\n    \n            # document = Documents_Corp(drivers)\n            # with allure.step('Login the corporate account.'):\n            #\n            #     cus.Login_step(CorpEmail, Password)\n            # with allure.step('Switch to This rep Documents tab page.'):\n            #\n            #     document.open_Documents()\n            #     document.open_Representatives()\n            #     document.open_OnlineRepPage(Rep2Name)\n            # with allure.step(' There is \"NEW\" at the top-left corner of the document {} '.format(DocumentType1)):\n            #     assert document.check_NewLabel(DocumentType1)\n            #with allure.step('Check Document and has a \"Request Access\" button at the document.'):\n                #latestVersion = document.check_repDocDetails(DocumentType1)\n                #document.requestAccessButton.click()\n            # with allure.step('Input Note and confirm'):\n            #     document.note.send_keys('The {} Access Request'.format(latestVersion))\n            #     document.confirmNote.click();time.sleep(3)\n            # with allure.step('The new version will be displayed.'):\n            #     assert document.docIs_NoAccess()==False\n            #     document.close_doc_window()\n            #     CusHomePage.Logout()\n            # massageP=MessagesPage(drivers)\n            # with allure.step('Login rep account ,in notification named \"Important Info\" will be displayed.'):\n            #     cus.Login_step(Rep2Email,Password)\n            #     massageP.JumpSytemMessage()\n            #     assert 'The {} Access Request'.format(latestVersion) in massageP.GetLatestMassage()\n            #     CusHomePage.Logout()\n        document = Documents_Corp(drivers)\n    \n        # with allure.step('D: Verify the workflow of the corporate request access to rep {} one document that he without the access before'.format(Rep2Email)):\n            # with allure.step('Rep upload a new type doc name {}'.format(Rep2Doc2)):\n            #     cus.Login_step(Rep2Email,Password)\n            #     CusHomePage.UploadDocHome_Ind(DocPath,dataTest,Rep2Doc2,Rep2Name)\n            #     CusHomePage.Logout()\n    \n    \n            # with allure.step('Switch to This rep Documents tab page.'):\n            #\n            #     cus.Login_step(CorpEmail,Password)\n            #     document.open_Documents()\n            #     document.open_Representatives()\n            #     document.open_OnlineRepPage(Rep2Name)\n            # with allure.step('There is \"No Access\" at the top-left corner of the document {} '.format(Rep2Doc2)):\n            #\n            #     assert document.check_NoAccess_Label(Rep2Doc2)\n            # with allure.step('Send Document Permission Request '):\n            #\n            #     document.note.send_keys('The {} Access Request'.format(Rep2Doc2))\n            #     document.confirmNote.click();time.sleep(3)\n            #     CusHomePage.Logout()\n    \n            # with allure.step('Rep login and Document Permission Request display in the action list'):\n                # cus.Login_step(Rep2Email,Password)\n                #后面会修复 为\n                # ActionOP.open_Purpose('requested access to the below document(s)')\n                # ActionOP.Confirm_DocPermission(Rep2Doc2,'The {} Access Request'.format(Rep2Doc2))\n                # with allure.step('Check Corporates I represent displays doc {}'.format(Rep2Doc2)):\n                #\n                #     AccessDoc = corpRep.CheckCorpInformation()\n                #     assert Rep2Doc2 in AccessDoc['getDocWithAccess']\n                #     CusHomePage.Logout()\n            # with allure.step('Coporate login can see the details of the doc {}'.format(Rep2Doc2)):\n                # cus.Login_step(CorpEmail,Password)\n            #     document.open_Documents()\n            #     document.open_Representatives()\n            #     document.open_OnlineRepPage(Rep2Name)\n            #     assert document.check_repDocDetails(Rep2Doc2)\n            #     document.close_doc_window()\n            #     CusHomePage.Logout()\n    \n        product_op = Product(drivers)\n        bus = LoginPage(drivers)\n        nav = NavigationBar(drivers)\n    \n    \n        # with allure.step('Precondition 1: {} create a new product name {}...'.format(business_name, NewProductName)):\n            # with allure.step('Login business portal...'):\n            #     OpenNew_window = 'window.open(\"{}\")'.format(Test_data['business_url'])\n            #     bus.execute_script(OpenNew_window);\n            #     bus.switch_to_window(1)\n            #     bus.wait(10);\n            #     sleep(7)\n            # #\n            # #\n            #     bus.BusLogin(business_email, business_password)\n            # with allure.step('Create a new Product/Services named {}'.format(NewProductName)):\n            #     product_op.OpenProuductPage()\n            #     product_op.Create_Basic_Inforamtion(NewProductName, 'Corporate',\n            #                                         Note='Scenario 1: The corporate company has shared the document to OBC')\n            #     product_op.Create_Standard_Due_Diligence_Documents()\n            #     product_op.Create_Authorised_Representatives(1, DocumentType1)\n            # with allure.step('Send to {} Source documents'.format(CorpEmail)):\n            #     nav.SourceDocuments(CorpEmail, NewProductName,\n            #                         Note='Scenario 1: The corporate company has shared the document to OBC')\n            #     nav.switch_to_window(0)\n            # with allure.step('Corp completed this new product'):\n            #     cus.Login_step(CorpEmail,Password)\n            #     ActionOP.open_Purpose(NewProductName)\n            #\n            #     ActionOP.Next.click();\n            #     ActionOP.Select_rep(Rep2Name,)\n            #     ActionOP.consent_action()\n            #     CusHomePage.Logout()\n    \n        # with allure.step('E: Verify the workflow of the existing rep revoke the document that has granted access for the corporate company.'):\n            # with allure.step('Scenario 1: The corporate company has shared the document to OBC: {}'.format(business_name)):\n            #\n                # with allure.step('Rep login and revoke this doc {}'.format(DocumentType1)):\n                #     cus.Login_step(Rep2Email, Password)\n                    # corpRep.open_CorporatesRepresent()\n                    # with allure.step('The document has been shared with onboarding company, please revoke access first.'):\n                    #\n                    #     assert corpRep.PermissReovkeDoc(CorpName,DocumentType1) ==False\n    \n            # with allure.step('Scenario 2: The corporate company has not shared the document to any OBC: {}'.format(business_name)):\n    \n                # with allure.step('Rep login and revoke this doc {}'.format(Rep2Doc2)):\n    \n                    # with allure.step( 'Revoke button will be disappeared next the document.'):\n                    #     assert corpRep.PermissReovkeDoc(CorpName,Rep2Doc2) == True\n                    #     CusHomePage.Logout()\n                    # with allure.step(' Login the corporate account ->Switch to Documents tab page.'):\n                    #     cus.Login_step(CorpEmail, Password)\n                    # with allure.step('There is \"No Access\" at the document {} '.format(Rep2Doc2)):\n                    #\n                    #     document.open_Documents()\n                    #     document.open_Representatives()\n                    #     with allure.step('{} has no doc '.format(Rep2Doc2)):\n                    #         document.open_OnlineRepPage(Rep2Name)\n                    #         assert document.check_NoAccess_Label(Rep2Doc2,click=False)==True\n                    #         CusHomePage.Logout()\n    \n        # with allure.step('F: Verify the workflow of the existing rep delete the document that has granted access for the corporate company'):\n            # with allure.step('Scenario 1: The corporate company has shared the document{} to OBC.'.format(DocumentType1)):\n            #     with allure.step('1. Login the rep account'):\n            #         cus.Login_step(Rep2Email,Password)\n            #     with allure.step('2. Switch to Documents tab page.'):\n            #         document.open_Documents()\n            #     with allure.step('3. Delete the document that has been shared to OBC.'):\n            #         daleteResult = document.Delete_Doc(DocumentType1)\n            #     with allure.step('One info pop up will be displayed: The document has been shared with onboarding company, please revoke access first.'):\n            #         assert daleteResult[0]==False\n            #         assert 'The document has been shared' in daleteResult[1]\n    \n            # with allure.step('Scenario 2: The corporate company has no shared the document{} to OBC.'.format(Rep2Doc2)):\n            #\n            #     with allure.step('1 Delete the document {} that not shared to OBC.'.format(Rep2Doc2)):\n            #\n            #         daleteResult = document.Delete_Doc(Rep2Doc2)\n            #     with allure.step(' The document will be disappeared in My Document page.'):\n            #         assert daleteResult==True\n                     #CusHomePage.Logout()\n    \n        # with allure.step('G:  Verify the workflow of the corporate company remove the existing rep and invite he as the rep again.'):\n            # with allure.step('Scenario 1: The corporate company has shared the rep document to OBC.'):\n                # with allure.step('1. Login the corp account'):\n                    # cus.Login_step(CorpEmail, Password)\n                # with allure.step('2. Navigate to connections/Authorised Representative'):\n                #     AuthPage.open_AuthorisedRepresent()\n                # with allure.step('3. Choose a Rep and click the delete button Click the CONFIRM button  Refresh the list'):\n                #     assert AuthPage.Remove_onlineRep(Rep2Email)==True\n                # with allure.step('4. Check the in Document-Inactive'):\n                #\n                #     document.open_Documents()\n                #     document.open_Representatives()\n                #     document.open_InactiveRepPage(Rep2Name)\n                #     CusHomePage.Logout()\n                # with allure.step('5.Rep login and Switch to connections-Corporates Represent'):\n                #\n                #     cus.Login_step(Rep2Email,Password)\n                #     corpRep.open_CorporatesRepresent()\n                # with allure.step('6 The documents which has be shared to OBC are displayed in the documents permission page.'):\n                #\n                #     corpRep.PermissionSetting.click()\n                # with allure.step('7 Pop up warning:You are no longger the representative of the Corporates I represent and cannot modify the document permission'):\n                #\n                #     assert 'You are no longger the representative of' in corpRep.warning.text\n                #     corpRep.okay.click()\n                #\n                # with allure.step('8.Login the corp account and Invite the individual as the rep again.'):\n                #\n                #     AuthPage.open_AuthorisedRepresent()\n                #     AuthPage.InviteRep(Rep2Email)\n                #     CusHomePage.Logout()\n                # with allure.step('9.Rep Login and accept this invite'):\n                #\n                #     cus.Login_step(Rep2Email, Password)\n                #     ActionOP.open_Purpose('Confirmation needed as an Authorised representative')\n                #     ActionOP.confirmBeRepFirstConsent.click()\n                # with allure.step('10.Check if there is version information for previously shared files:This version of document {} has already been shared with this company'.format(Rep2Doc2)):\n                #\n                #     result = ActionOP.assertDocHasBeenShared(DocumentType1)\n                #     assert 'This version of document {} has already been shared with this company'.format(DocumentType1) in result[1]\n                #     ActionOP.docPermissionConfirm.click() ;ActionOP.sleep(3)\n                #     CusHomePage.Logout()\n                # with allure.step('11.Login corp ,Switch to the Document page.Expand the corresponding rep to check the documents.'):\n                #     cus.Login_step(CorpEmail,Password)\n                #     document.open_Documents()\n                #     document.open_Representatives()\n                #     document.open_OnlineRepPage(Rep2Name)\n                # with allure.step('12. The documents which selected and the documents that has shared with OBC are all with the access.'):\n                #     document.check_repDocDetails(DocumentType1)\n                #     document.close_doc_window()\n                #     CusHomePage.Logout()\n    \n            # with allure.step('Scenario 2: The corporate company has not shared the document to any OBC.'):\n                # cus.Login_step(CorpEmail, Password)\n                # with allure.step('2. Navigate to connections/Authorised Representative'):\n                #     AuthPage.open_AuthorisedRepresent()\n                # with allure.step('3. Choose a Rep and click the delete button Click the CONFIRM button  Refresh the list'):\n                #\n                #     assert AuthPage.Remove_onlineRep(Rep1Email) == True\n                #     CusHomePage.Logout()\n                # with allure.step('4 Login the rep account,Switch to connections-Corporates Represent,Find the corp you just matched'):\n                #\n                #     cus.Login_step(Rep1Email, Password)\n                #     result_ = corpRep.CheckCorpInformation()\n                #     assert result_== ''\n                #     CusHomePage.Logout()\n                # with allure.step('5.Login the corp account and Invite the individual as the rep again.'):\n                #\n                #     cus.Login_step(CorpEmail, Password)\n                #     AuthPage.open_AuthorisedRepresent()\n                #     AuthPage.InviteRep(Rep1Email)\n                #     CusHomePage.Logout()\n                # with allure.step('6.Rep Login and accept this invite'):\n                #\n                #     cus.Login_step(Rep1Email, Password)\n                #     ActionOP.ConfirmAuteRep_With_No_Doc()\n                #     CusHomePage.Logout()\n                # with allure.step('7.Login corp ,Switch to the Document page.Expand the corresponding rep to check the documents.'):\n                #\n                #     cus.Login_step(CorpEmail, Password)\n                #     document.open_Documents()\n                #     document.open_Representatives()\n                #     assert document.open_OnlineRepPage(Rep1Name)==True\n                #     CusHomePage.Logout()\n        companyshare = Companies(drivers)\n    \n        with allure.step('H. Verify the workflow of the corporate company share documents for one OBC via one existing Product/Service that need some rep documents.'):\n    \n            # with allure.step('Scenario 1: The selected rep has not granted the document access for the corporate.'):\n            #     with allure.step('1.Corp click the share buttonEnter the OBC company name to search,Select the product that requires REP documentation'):\n            #         cus.Login_step(CorpEmail,Password)\n            #         companyshare.JumpCompanies()\n            #         needrepnum = companyshare.SearchConnect(business_name,NewProductName)\n            #         assert needrepnum>0\n            #         RepPendingDoc = companyshare.ProductSelectRep(Rep1Name)\n            #         companyshare.XButton.click()\n            #         CusHomePage.Logout()\n            #     with allure.step('Rep Upload the doc required for the product'):\n            #         cus.Login_step(Rep1Email,Password)\n            #         for doc in RepPendingDoc:\n            #             CusHomePage.UploadDocHome_Ind(DocPath,dataTest,doc)\n            #         CusHomePage.Logout()\n            #     with allure.step('3..Corp share this OBC company again'):\n            #         cus.Login_step(CorpEmail, Password)\n            #         companyshare.JumpCompanies()\n            #         needrepnum = companyshare.SearchConnect(business_name, NewProductName)\n            #         assert needrepnum > 0\n            #         RepNoaccessDoc = companyshare.ProductSelectRep(Rep1Name)\n            #     with allure.step('4. Corp select the rep and NoAccess documents,The status of the document is NoAccess'):\n            #         assert DocumentType1 in RepNoaccessDoc\n            #     with allure.step('5.Click confirm button ,pop up You dont have permission for this document, please request permission first.'):\n            #         Message = companyshare.confirmShare()\n            #         assert  'please request permission first'in Message\n            #         companyshare.XButton.click()\n            #         CusHomePage.Logout()\n    \n            vaulhub = VaultHub(drivers)\n            drawer = Drawer(drivers)\n            with allure.step('Scenario 2: The selected rep has granted the document access for the corporate;'):\n                # with allure.step( '1.Corp click the share buttonEnter the OBC company name to search,Select the product that requires REP documentation'):\n                #     cus.Login_step(CorpEmail, Password)\n                #     companyshare.JumpCompanies()\n                #     needrepnum = companyshare.SearchConnect(business_name, NewProductName)\n                #     assert needrepnum > 0\n                #     DocNOcompleteStatue = companyshare.ProductSelectRep(Rep2Name)\n                # with allure.step('2.Corp select the rep and documents with permissions'):\n                #     assert DocNOcompleteStatue==0\n                # with allure.step('3. Click the CONFIRM button,and Reminder: Success'):\n                #     Message = companyshare.confirmShare()\n                #     assert 'Share Success!' in Message\n                #     CusHomePage.Logout()\n                with allure.step('The obc user can see the reps document'):\n                    with allure.step('Login business portal...'):\n                        OpenNew_window = 'window.open(\"{}\")'.format(Test_data['business_url'])\n                        bus.execute_script(OpenNew_window);\n                        bus.switch_to_window(1)\n    \n                        bus.wait(10);\n                        sleep(7)\n                        bus.BusLogin(business_email, business_password)\n>                       bus.close(Test_data['business_url'])\nE                       TypeError: close() takes 1 positional argument but 2 were given\n\nSmokeTesting_test.py:1225: TypeError",
    "steps" : [ {
      "name" : "Precondition 0: Doc Type Path Ready....",
      "time" : {
        "start" : 1683282720066,
        "stop" : 1683282720066,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false,
      "stepsCount" : 0
    }, {
      "name" : "H. Verify the workflow of the corporate company share documents for one OBC via one existing Product/Service that need some rep documents.",
      "time" : {
        "start" : 1683282729713,
        "stop" : 1683282756678,
        "duration" : 26965
      },
      "status" : "broken",
      "statusMessage" : "TypeError: close() takes 1 positional argument but 2 were given\n",
      "statusTrace" : "  File \"D:\\Users\\jianghaodong\\PycharmProjects\\pytest_study\\venv\\test_demo\\SmokeTesting_test.py\", line 1225, in test_St110\n    bus.close(Test_data['business_url'])\n",
      "steps" : [ {
        "name" : "Scenario 2: The selected rep has granted the document access for the corporate;",
        "time" : {
          "start" : 1683282729713,
          "stop" : 1683282756678,
          "duration" : 26965
        },
        "status" : "broken",
        "statusMessage" : "TypeError: close() takes 1 positional argument but 2 were given\n",
        "statusTrace" : "  File \"D:\\Users\\jianghaodong\\PycharmProjects\\pytest_study\\venv\\test_demo\\SmokeTesting_test.py\", line 1225, in test_St110\n    bus.close(Test_data['business_url'])\n",
        "steps" : [ {
          "name" : "The obc user can see the reps document",
          "time" : {
            "start" : 1683282729713,
            "stop" : 1683282756678,
            "duration" : 26965
          },
          "status" : "broken",
          "statusMessage" : "TypeError: close() takes 1 positional argument but 2 were given\n",
          "statusTrace" : "  File \"D:\\Users\\jianghaodong\\PycharmProjects\\pytest_study\\venv\\test_demo\\SmokeTesting_test.py\", line 1225, in test_St110\n    bus.close(Test_data['business_url'])\n",
          "steps" : [ {
            "name" : "Login business portal...",
            "time" : {
              "start" : 1683282729713,
              "stop" : 1683282756677,
              "duration" : 26964
            },
            "status" : "broken",
            "statusMessage" : "TypeError: close() takes 1 positional argument but 2 were given\n",
            "statusTrace" : "  File \"D:\\Users\\jianghaodong\\PycharmProjects\\pytest_study\\venv\\test_demo\\SmokeTesting_test.py\", line 1225, in test_St110\n    bus.close(Test_data['business_url'])\n",
            "steps" : [ ],
            "attachments" : [ ],
            "parameters" : [ ],
            "attachmentsCount" : 0,
            "shouldDisplayMessage" : true,
            "hasContent" : true,
            "stepsCount" : 0
          } ],
          "attachments" : [ ],
          "parameters" : [ ],
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : true,
          "stepsCount" : 1
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true,
        "stepsCount" : 2
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true,
      "stepsCount" : 3
    }, {
      "name" : "当前case 失败截图",
      "time" : {
        "start" : 1683282756795,
        "stop" : 1683282756960,
        "duration" : 165
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "8393089a13e74490",
        "name" : "case 失败截图",
        "source" : "8393089a13e74490.png",
        "type" : "image/png",
        "size" : 70955
      } ],
      "parameters" : [ ],
      "attachmentsCount" : 1,
      "shouldDisplayMessage" : false,
      "hasContent" : true,
      "stepsCount" : 0
    } ],
    "attachments" : [ {
      "uid" : "d3136d10bd8731b2",
      "name" : "log",
      "source" : "d3136d10bd8731b2.txt",
      "type" : "text/plain",
      "size" : 684
    } ],
    "parameters" : [ ],
    "attachmentsCount" : 2,
    "shouldDisplayMessage" : true,
    "hasContent" : true,
    "stepsCount" : 6
  },
  "afterStages" : [ {
    "name" : "drivers::fn",
    "time" : {
      "start" : 1683282756982,
      "stop" : 1683282763364,
      "duration" : 6382
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  } ],
  "labels" : [ {
    "name" : "epic",
    "value" : "Somke Testing Valid8Me v2.11.0"
  }, {
    "name" : "story",
    "value" : "Verify that the corporate user should be able to upload a document.."
  }, {
    "name" : "suite",
    "value" : "SmokeTesting_test"
  }, {
    "name" : "subSuite",
    "value" : "TestCaes"
  }, {
    "name" : "host",
    "value" : "wswincnhz1692"
  }, {
    "name" : "thread",
    "value" : "45396-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "SmokeTesting_test"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "CorpEmail",
    "value" : "'99h@snapmail.cc'"
  }, {
    "name" : "CorpName",
    "value" : "'99h'"
  }, {
    "name" : "DocumentType1",
    "value" : "'National ID Card'"
  }, {
    "name" : "DocumentType2",
    "value" : "'Passport'"
  }, {
    "name" : "NewProductName",
    "value" : "'Link_NewCorp_WithRep_2'"
  }, {
    "name" : "Password",
    "value" : "'Ht@12345'"
  }, {
    "name" : "Rep1Email",
    "value" : "'99hrep1@snapmail.cc'"
  }, {
    "name" : "Rep1Name",
    "value" : "'99hrep1'"
  }, {
    "name" : "Rep2Doc2",
    "value" : "'Passport'"
  }, {
    "name" : "Rep2Email",
    "value" : "'99hrep2@snapmail.cc'"
  }, {
    "name" : "Rep2Name",
    "value" : "'99hrep2'"
  }, {
    "name" : "Rep3Email",
    "value" : "'99hrep3@snapmail.cc'"
  }, {
    "name" : "Rep3Name",
    "value" : "'99hrep3'"
  }, {
    "name" : "business_email",
    "value" : "'chloe@snapmail.cc'"
  }, {
    "name" : "business_name",
    "value" : "'ChloeCompany'"
  }, {
    "name" : "business_password",
    "value" : "'Ht@12345'"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ {
      "uid" : "2a429d1f1c8428a1",
      "status" : "broken",
      "statusDetails" : "TypeError: close() takes 1 positional argument but 2 were given",
      "time" : {
        "start" : 1683282608292,
        "stop" : 1683282645479,
        "duration" : 37187
      }
    }, {
      "uid" : "584925b63fcde9d5",
      "status" : "broken",
      "statusDetails" : "AttributeError: 'LoginPage' object has no attribute 'close'",
      "time" : {
        "start" : 1683282362845,
        "stop" : 1683282399703,
        "duration" : 36858
      }
    }, {
      "uid" : "1cb7878145aa75d",
      "status" : "broken",
      "statusDetails" : "selenium.common.exceptions.InvalidArgumentException: Message: invalid argument: invalid locator\n  (Session info: chrome=112.0.5615.50)\nStacktrace:\nBacktrace:\n\t(No symbol) [0x006ADCE3]\n\t(No symbol) [0x006439D1]\n\t(No symbol) [0x00554DA8]\n\t(No symbol) [0x00580292]\n\t(No symbol) [0x005803AB]\n\t(No symbol) [0x005AEE9C]\n\t(No symbol) [0x0059AF14]\n\t(No symbol) [0x005AD57C]\n\t(No symbol) [0x0059ACC6]\n\t(No symbol) [0x00576F68]\n\t(No symbol) [0x005780CD]\n\tGetHandleVerifier [0x00923832+2506274]\n\tGetHandleVerifier [0x00959794+2727300]\n\tGetHandleVerifier [0x0095E36C+2746716]\n\tGetHandleVerifier [0x00756690+617600]\n\t(No symbol) [0x0064C712]\n\t(No symbol) [0x00651FF8]\n\t(No symbol) [0x006520DB]\n\t(No symbol) [0x0065C63B]\n\tBaseThreadInitThunk [0x76286359+25]\n\tRtlGetAppContainerNamedObjectPath [0x77DB87D4+228]\n\tRtlGetAppContainerNamedObjectPath [0x77DB87A4+180]",
      "time" : {
        "start" : 1683274847664,
        "stop" : 1683275016280,
        "duration" : 168616
      }
    }, {
      "uid" : "3ee51e50ad1bb5a",
      "status" : "broken",
      "statusDetails" : "IndexError: list index out of range",
      "time" : {
        "start" : 1683273497019,
        "stop" : 1683273621348,
        "duration" : 124329
      }
    }, {
      "uid" : "cce502916d1a1bd",
      "status" : "broken",
      "statusDetails" : "IndexError: list index out of range",
      "time" : {
        "start" : 1683272450909,
        "stop" : 1683272558533,
        "duration" : 107624
      }
    }, {
      "uid" : "569f8013dd483f97",
      "status" : "broken",
      "statusDetails" : "AttributeError: 'NoneType' object has no attribute 'find_elements'",
      "time" : {
        "start" : 1682574943903,
        "stop" : 1682574962498,
        "duration" : 18595
      }
    }, {
      "uid" : "8b6ace1cdc7b6c7a",
      "status" : "broken",
      "statusDetails" : "selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\n  (Session info: chrome=112.0.5615.50)\nStacktrace:\nBacktrace:\n\t(No symbol) [0x0085DCE3]\n\t(No symbol) [0x007F39D1]\n\t(No symbol) [0x00704C70]\n\t(No symbol) [0x007310D6]\n\t(No symbol) [0x00728D05]\n\t(No symbol) [0x0074AECC]\n\t(No symbol) [0x00728726]\n\t(No symbol) [0x0074B224]\n\t(No symbol) [0x0075D57C]\n\t(No symbol) [0x0074ACC6]\n\t(No symbol) [0x00726F68]\n\t(No symbol) [0x007280CD]\n\tGetHandleVerifier [0x00AD3832+2506274]\n\tGetHandleVerifier [0x00B09794+2727300]\n\tGetHandleVerifier [0x00B0E36C+2746716]\n\tGetHandleVerifier [0x00906690+617600]\n\t(No symbol) [0x007FC712]\n\t(No symbol) [0x00801FF8]\n\t(No symbol) [0x008020DB]\n\t(No symbol) [0x0080C63B]\n\tBaseThreadInitThunk [0x76286359+25]\n\tRtlGetAppContainerNamedObjectPath [0x77DB87D4+228]\n\tRtlGetAppContainerNamedObjectPath [0x77DB87A4+180]",
      "time" : {
        "start" : 1682573544338,
        "stop" : 1682573642141,
        "duration" : 97803
      }
    }, {
      "uid" : "98df71efadcf19c3",
      "status" : "broken",
      "statusDetails" : "selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\n  (Session info: chrome=112.0.5615.50)\nStacktrace:\nBacktrace:\n\t(No symbol) [0x0085DCE3]\n\t(No symbol) [0x007F39D1]\n\t(No symbol) [0x00704C70]\n\t(No symbol) [0x007310D6]\n\t(No symbol) [0x00728D05]\n\t(No symbol) [0x0074AECC]\n\t(No symbol) [0x00728726]\n\t(No symbol) [0x0074B224]\n\t(No symbol) [0x0075D57C]\n\t(No symbol) [0x0074ACC6]\n\t(No symbol) [0x00726F68]\n\t(No symbol) [0x007280CD]\n\tGetHandleVerifier [0x00AD3832+2506274]\n\tGetHandleVerifier [0x00B09794+2727300]\n\tGetHandleVerifier [0x00B0E36C+2746716]\n\tGetHandleVerifier [0x00906690+617600]\n\t(No symbol) [0x007FC712]\n\t(No symbol) [0x00801FF8]\n\t(No symbol) [0x008020DB]\n\t(No symbol) [0x0080C63B]\n\tBaseThreadInitThunk [0x76286359+25]\n\tRtlGetAppContainerNamedObjectPath [0x77DB87D4+228]\n\tRtlGetAppContainerNamedObjectPath [0x77DB87A4+180]",
      "time" : {
        "start" : 1682573302512,
        "stop" : 1682573377888,
        "duration" : 75376
      }
    }, {
      "uid" : "e53324c29c2bc11a",
      "status" : "broken",
      "statusDetails" : "selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\n  (Session info: chrome=112.0.5615.50)\nStacktrace:\nBacktrace:\n\t(No symbol) [0x0085DCE3]\n\t(No symbol) [0x007F39D1]\n\t(No symbol) [0x00704C70]\n\t(No symbol) [0x007310D6]\n\t(No symbol) [0x00728D05]\n\t(No symbol) [0x0074AECC]\n\t(No symbol) [0x00728726]\n\t(No symbol) [0x0074B224]\n\t(No symbol) [0x0075D57C]\n\t(No symbol) [0x0074ACC6]\n\t(No symbol) [0x00726F68]\n\t(No symbol) [0x007280CD]\n\tGetHandleVerifier [0x00AD3832+2506274]\n\tGetHandleVerifier [0x00B09794+2727300]\n\tGetHandleVerifier [0x00B0E36C+2746716]\n\tGetHandleVerifier [0x00906690+617600]\n\t(No symbol) [0x007FC712]\n\t(No symbol) [0x00801FF8]\n\t(No symbol) [0x008020DB]\n\t(No symbol) [0x0080C63B]\n\tBaseThreadInitThunk [0x76286359+25]\n\tRtlGetAppContainerNamedObjectPath [0x77DB87D4+228]\n\tRtlGetAppContainerNamedObjectPath [0x77DB87A4+180]",
      "time" : {
        "start" : 1682564627301,
        "stop" : 1682564991733,
        "duration" : 364432
      }
    }, {
      "uid" : "8026a4349e8edc3b",
      "status" : "failed",
      "statusDetails" : "AssertionError: assert 'You don t have permission for this document' in \"You don't have permission for this document, please request permission first.\"",
      "time" : {
        "start" : 1682507094122,
        "stop" : 1682507307124,
        "duration" : 213002
      }
    }, {
      "uid" : "d4f273c80615ef90",
      "status" : "broken",
      "statusDetails" : "AttributeError: 'Element' object has no attribute 'find'",
      "time" : {
        "start" : 1682506562912,
        "stop" : 1682506650776,
        "duration" : 87864
      }
    } ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "b0ca145e108618f2.json",
  "parameterValues" : [ "'99h@snapmail.cc'", "'99h'", "'National ID Card'", "'Passport'", "'Link_NewCorp_WithRep_2'", "'Ht@12345'", "'99hrep1@snapmail.cc'", "'99hrep1'", "'Passport'", "'99hrep2@snapmail.cc'", "'99hrep2'", "'99hrep3@snapmail.cc'", "'99hrep3'", "'chloe@snapmail.cc'", "'ChloeCompany'", "'Ht@12345'" ]
}